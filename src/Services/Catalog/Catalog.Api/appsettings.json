{
  "DatabaseSettings": {
    "ConnectionString": "mongodb://localhost:27017",
    "DatabaseName": "ProductDb",
    "CollectionName": "Products"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*"
}

//MongoDb
//Databases     == Databases                    // Mongo database in project is CatalogDb
//Collections   == Tables
//Documents     == Rows(Records)

//ls
//docker ps     OR docker container ls          //Lists all running containers
//docker ps -a  OR docker container ls --all   //Lists containers in any status
//docker pull mongo

//docker run -d -p 27017:27017 --name Hamidnch-CatalogDb mongo
//docker run --detach --publish 27017:27017 --name Hamidnch-CatalogDb mongo    //detach => run the docker container in the background mode
//docker run mongo sleep 5
//docker run -d -p 3000:3000 mongoclient/mongoclient 
//docker attach dcb0525fc88d
//docker logs -f hamidnch-CatalogDb
//docker exec -it Hamidnch-CatalogDb /bin/bash                     // Hamidnch-CatalogDb is Container name
//docker exec --interactive --tty Hamidnch-CatalogDb /bin/bash     // Hamidnch-CatalogDb is Container name
//docker start (docker id or docker name)
//docker stop (docker id or docker name)
//docker rm (docker id or docker name)                            //for get rid of a container || remove it
//docker rmi hello-world --force

//docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d
//docker-compose -f docker-compose.yml -f docker-compose.override.yml down

//mongo
//show dbs or showDatabases
//show collections
//use CatalogDb => for create a database with name 'CatalogDb'
//db.createCollection('Products')
//db.Products.insert([{ 'Name': 'Asus Laptop', 'Category': 'Computers', ...}])

//db.Products.find({}).pretty()
//db.Products.remove({})


//cat /etc/*release*
